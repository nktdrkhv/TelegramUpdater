@startuml
interface IUpdater {
    + EmergencyCancel() : void
    AddExceptionHandler(exceptionHandler:IExceptionHandler) : Updater
    AddScopedUpdateHandler(scopedHandlerContainer:IScopedUpdateHandlerContainer) : Updater
    AddSingletonUpdateHandler(updateHandler:ISingletonUpdateHandler) : Updater
    GetMeAsync() : Task<User>
    WriteAsync(update:Update, cancellationToken:CancellationToken) : ValueTask
    + StartAsync(cancellationToken:CancellationToken) : Task
    + ContainsKey(key:string) : bool
}
class "ILogger`1"<T> {
}
class "Rainbow`2"<T1,T2> {
}
class "IEnumerable`1"<T> {
}
IUpdater --> "BotClient" ITelegramBotClient
IUpdater --> "Logger<IUpdater>" "ILogger`1"
IUpdater --> "UpdaterOptions" UpdaterOptions
IUpdater --> "Rainbow<long,Update>" "Rainbow`2"
IUpdater --> "ScopedHandlerContainers<IScopedUpdateHandlerContainer>" "IEnumerable`1"
IUpdater --> "SingletonUpdateHandlers<ISingletonUpdateHandler>" "IEnumerable`1"
@enduml
