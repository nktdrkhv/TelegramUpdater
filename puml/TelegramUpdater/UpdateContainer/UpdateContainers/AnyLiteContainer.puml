@startuml
class "AnyLiteContainer`1"<T> {
    <<internal>> AnyLiteContainer(insiderResolver:Func<Update, T?>, update:Update, updater:IUpdater, extraObjects:IReadOnlyDictionary<string, object>?)
    <<internal>> {static} CreateLiteContainer(insiderResolver:Expression<Func<Update, U?>>, update:U, updater:IUpdater) : IContainer<U>
    <<internal>> {static} MessageLiteContainer(update:Message, updater:IUpdater) : IContainer<Message>
    <<internal>> {static} CallbackQueryLiteContainer(update:CallbackQuery, updater:IUpdater) : IContainer<CallbackQuery>
}
class "UpdateContainerAbs`1"<T> {
}
class "ShiningInfo`2"<T1,T2> {
}
"UpdateContainerAbs`1" "<T>" <|-- "AnyLiteContainer`1"
"AnyLiteContainer`1" --> "ShiningInfo<long,Update>" "ShiningInfo`2"
@enduml
