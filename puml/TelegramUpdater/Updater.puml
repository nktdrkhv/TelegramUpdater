@startuml
class Updater <<sealed>> {
    - <<readonly>> _preUpdateProcessorType : Type?
    - _me : User? = null
    - _emergencyCancel : CancellationTokenSource?
    - <<readonly>> _serviceDescriptors : IServiceProvider?
    + Updater(botClient:ITelegramBotClient, updaterOptions:UpdaterOptions, serviceDescriptors:IServiceProvider?, preUpdateProcessorType:Type?, customKeyResolver:Func<Update, long>?, outgoingRateControl:bool)
    - <<async>> OnApiResponseReceived(botClient:ITelegramBotClient, args:ApiResponseEventArgs, cancellationToken:CancellationToken) : ValueTask
    + Updater(botToken:string, updaterOptions:UpdaterOptions, preUpdateProcessorType:Type?, customKeyResolver:Func<Update, long>?)
    + EmergencyCancel() : void
    + ContainsKey(key:string) : bool
    + AddSingletonUpdateHandler(updateHandler:ISingletonUpdateHandler) : Updater
    + AddScopedUpdateHandler(scopedHandlerContainer:IScopedUpdateHandlerContainer) : Updater
    + AddExceptionHandler(exceptionHandler:IExceptionHandler) : Updater
    + <<async>> WriteAsync(update:Update, cancellationToken:CancellationToken) : ValueTask
    + <<async>> StartAsync(cancellationToken:CancellationToken) : Task
    + <<async>> GetMeAsync() : Task<User>
    - QueueKeyResolver(update:Update) : long
    - DetectAllowedUpdates() : UpdateType[]
    - ShineErrors(exception:Exception, cancellationToken:CancellationToken) : Task
    - <<async>> ShineCallback(shiningInfo:ShiningInfo<long, Update>, cancellationToken:CancellationToken) : Task
    - <<async>> ProcessUpdateFromServices(shiningInfo:ShiningInfo<long, Update>, cancellationToken:CancellationToken) : Task
    - <<async>> ProcessUpdate(shiningInfo:ShiningInfo<long, Update>, cancellationToken:CancellationToken) : Task
    - <<async>> HandleHandler(shiningInfo:ShiningInfo<long, Update>, handler:IUpdateHandler, cancellationToken:CancellationToken) : Task<bool>
}
class "List`1"<T> {
}
class "ILogger`1"<T> {
}
class "Dictionary`2"<T1,T2> {
}
class "Rainbow`2"<T1,T2> {
}
class "IEnumerable`1"<T> {
}
IUpdater <|-- Updater
Updater --> "_botClient" ITelegramBotClient
Updater --> "_updateHandlers<ISingletonUpdateHandler>" "List`1"
Updater --> "_scopedHandlerContainers<IScopedUpdateHandlerContainer>" "List`1"
Updater --> "_exceptionHandlers<IExceptionHandler>" "List`1"
Updater --> "_logger<IUpdater>" "ILogger`1"
Updater --> "_extraData<string,object>" "Dictionary`2"
Updater --> "_updaterOptions" UpdaterOptions
Updater --> "_rainbow<long,Update>" "Rainbow`2"
Updater --> "UpdaterOptions" UpdaterOptions
Updater --> "BotClient" ITelegramBotClient
Updater --> "Logger<IUpdater>" "ILogger`1"
Updater --> "Rainbow<long,Update>" "Rainbow`2"
Updater --> "ScopedHandlerContainers<IScopedUpdateHandlerContainer>" "IEnumerable`1"
Updater --> "SingletonUpdateHandlers<ISingletonUpdateHandler>" "IEnumerable`1"
@enduml
